<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sora.demo.mbg.mapper.Sign_inMapper">
  <resultMap id="BaseResultMap" type="com.sora.demo.mbg.model.Sign_in">
    <id column="sign_in_id" jdbcType="INTEGER" property="signInId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="classroom_id" jdbcType="INTEGER" property="classroomId" />
    <result column="class_hour_cost" jdbcType="INTEGER" property="classHourCost" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sign_in_id, course_id, teacher_id, classroom_id, class_hour_cost, start_time, finish_time
  </sql>
  <select id="selectByExample" parameterType="com.sora.demo.mbg.model.Sign_inExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sign_in
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sign_in
    where sign_in_id = #{signInId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sign_in
    where sign_in_id = #{signInId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sora.demo.mbg.model.Sign_inExample">
    delete from sign_in
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sora.demo.mbg.model.Sign_in">
    insert into sign_in (sign_in_id, course_id, teacher_id, 
      classroom_id, class_hour_cost, start_time, 
      finish_time)
    values (#{signInId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, 
      #{classroomId,jdbcType=INTEGER}, #{classHourCost,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{finishTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sora.demo.mbg.model.Sign_in">
    insert into sign_in
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="signInId != null">
        sign_in_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="classroomId != null">
        classroom_id,
      </if>
      <if test="classHourCost != null">
        class_hour_cost,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="signInId != null">
        #{signInId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="classroomId != null">
        #{classroomId,jdbcType=INTEGER},
      </if>
      <if test="classHourCost != null">
        #{classHourCost,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sora.demo.mbg.model.Sign_inExample" resultType="java.lang.Long">
    select count(*) from sign_in
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sign_in
    <set>
      <if test="record.signInId != null">
        sign_in_id = #{record.signInId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.classroomId != null">
        classroom_id = #{record.classroomId,jdbcType=INTEGER},
      </if>
      <if test="record.classHourCost != null">
        class_hour_cost = #{record.classHourCost,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sign_in
    set sign_in_id = #{record.signInId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      classroom_id = #{record.classroomId,jdbcType=INTEGER},
      class_hour_cost = #{record.classHourCost,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sora.demo.mbg.model.Sign_in">
    update sign_in
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="classroomId != null">
        classroom_id = #{classroomId,jdbcType=INTEGER},
      </if>
      <if test="classHourCost != null">
        class_hour_cost = #{classHourCost,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where sign_in_id = #{signInId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sora.demo.mbg.model.Sign_in">
    update sign_in
    set course_id = #{courseId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      classroom_id = #{classroomId,jdbcType=INTEGER},
      class_hour_cost = #{classHourCost,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP}
    where sign_in_id = #{signInId,jdbcType=INTEGER}
  </update>
</mapper>